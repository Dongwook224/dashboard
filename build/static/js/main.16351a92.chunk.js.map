{"version":3,"sources":["components/TopNav.js","components/Rank.js","components/Theaters.js","components/Trend.js","components/DashboardByDate.js","components/DashboardByTitle.js","common/dataProcessing.js","components/Footer.js","App.js","index.js"],"names":["registerLocale","ko","TopNav","props","movieInput","FormControl","name","type","placeholder","className","onChange","searchChange","required","dateInput","selected","searchDate","datePickerChange","dateFormat","locale","Row","Col","Navbar","expand","bg","variant","Brand","href","Form","inline","onSubmit","submit","InputGroup","DropdownButton","as","Prepend","title","dropdownTitle","id","onSelect","dropdownSelect","Dropdown","Item","eventKey","Button","ToggleButtonGroup","aria-label","defaultValue","buttonClick","ToggleButton","value","Rank","date","Table","data","map","key","movieCode","data-title","onClick","click","movieName","colSpan","Theaters","options","chart","height","credits","enabled","text","undefined","plotOptions","pie","innerSize","colors","dataLabels","formatter","this","length","substring","distance","legend","align","layout","verticalAlign","tooltip","pointFormatter","percentage","toFixed","y","toLocaleString","series","showInLegend","highcharts","Highcharts","require","Trend","categories","setOptions","lang","thousandsSep","xAxis","tickPositioner","categoryLength","positions","i","push","yAxis","min","labels","unit","color","marker","fillColor","lineWidth","lineColor","fillOpacity","userOptions","tooltipUnit","DashboardByDate","daily","cumulative","theaters","trend","year","substr","month","day","formattedDate","dashboard","xs","sm","md","change","Component","DashboardByTitle","movieNm","index","rank","salesAmt","salesAcc","audiCnt","audiAcc","scrnCnt","showcnt","errorMessage","getTrendData","rawdata","clicked","isAttendance","lastIndex","filtered","targetMovieCode","replace","dataType","filter","movieCd","findIndex","getTrendDate","seriesData","weekday","Date","getDay","getDate","isNow","getFullYear","getMonth","console","log","join","getDefaultData","title4Attendance","title4Income","defaultData","targetMovies","targetData","dataKey","tempObject","sort","a","b","Footer","style","fontSize","App","state","isAttendace","searchValue","buttonValue","titleData","setFullYear","currentDate","isLoading","isSearch","isTitle","loadingMessage","handleMovienameClick","bind","handleDropdownSelect","handleSearchChange","handleDatePickerChange","handleSubmit","handleButtonClick","event","setState","target","preventDefault","forEach","tempObj","openDt","getTitleData","getAttribute","today","axios","get","then","response","d","catch","error","dashboardData","dashboardByTitle","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16351a92.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Form, Button, FormControl, InputGroup, DropdownButton, Dropdown, ToggleButton, ToggleButtonGroup, Row, Col } from 'react-bootstrap';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport ko from 'date-fns/locale/ko';\r\nregisterLocale('ko', ko)\r\n\r\nconst TopNav = (props) => {\r\n    const movieInput = (\r\n        <FormControl\r\n          name=\"search\"\r\n          type=\"input\"\r\n          placeholder=\"영화제목을 입력하세요\"\r\n          className=\"mr-sm-2\"\r\n          onChange={props.searchChange}\r\n          required\r\n        />\r\n    );\r\n\r\n    const dateInput = (\r\n        <DatePicker\r\n          name=\"date\"\r\n          selected={props.searchDate}\r\n          onChange={props.datePickerChange}\r\n          dateFormat=\"yyyy-MM-dd\"\r\n          className=\"mr-sm-2 form-control\"\r\n          locale='ko'\r\n        />\r\n    );\r\n\r\n    return (\r\n        <Row className=\"mt-0\">\r\n            <Col>\r\n                <Navbar expand=\"lg\" bg=\"light\" variant=\"light\" className=\"justify-content-between\">\r\n                    <Navbar.Brand href=\"./\" className=\"ml-1 font-weight-bold\">1년 전, 인기 영화는?</Navbar.Brand>\r\n                    \r\n                    <Form inline className=\"\" onSubmit={props.submit}>\r\n                        <InputGroup>\r\n                            <DropdownButton\r\n                                as={InputGroup.Prepend}\r\n                                variant=\"secondary\"\r\n                                title={props.dropdownTitle}\r\n                                id=\"input-group-dropdown-1\"\r\n                                onSelect={props.dropdownSelect}\r\n                            >\r\n                                <Dropdown.Item eventKey=\"date\">날짜</Dropdown.Item>\r\n                                <Dropdown.Item eventKey=\"movieName\">영화명</Dropdown.Item>\r\n                            </DropdownButton>\r\n                            {props.dropdownTitle===\"영화명\" ? movieInput: dateInput}\r\n                            <Button type=\"submit\" variant=\"dark\">검색</Button>\r\n                        </InputGroup>\r\n                    </Form>\r\n\r\n                    <ToggleButtonGroup aria-label=\"Basic example\" type=\"radio\" name=\"options\" defaultValue='attendance' onChange={props.buttonClick}>\r\n                        <ToggleButton value='attendance' variant=\"outline-secondary\">관객수</ToggleButton>\r\n                        <ToggleButton value='income' variant=\"outline-secondary\">매출액</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Navbar>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default TopNav;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport './Rank.css';\r\n\r\nconst Rank = (props) => {\r\n    return (\r\n        <div className=\"bg-white\">\r\n            <div className=\"mt-3 border-bottom\">\r\n                <h5>{props && props.title} <small className=\"ml-3\">{props.date}</small></h5>\r\n            </div>\r\n            <div>\r\n                <Table className=\"bg-white mt-2\">\r\n                    <tbody>\r\n                        {props.data && props.data.map((data) => {\r\n                            return (\r\n                                <tr key={data.movieCode}>\r\n                                    <td\r\n                                      className=\"movie-title text-left\"\r\n                                      data-title={data.movieCode}\r\n                                      onClick={props.click}\r\n                                    >{data.movieName}</td>\r\n                                    <td className=\"text-right\">{data.value}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        <tr>\r\n                            <td colSpan=\"2\">More...</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst Theaters = (props) => {\r\n    const pieChartData = props.data ? props.data : null;\r\n\r\n    const options = {\r\n        chart: {\r\n            type: 'pie',\r\n           height: 241\r\n        },\r\n\r\n        credits: {\r\n            enabled: false\r\n        },\r\n    \r\n        title: {\r\n            text: undefined\r\n        },\r\n\r\n        plotOptions: {\r\n            pie: {\r\n                innerSize: '60%',\r\n                colors: ['#4dabf7', '#74c0fc', '#a5d8ff', '#d0ebff', '#e7f5ff'],\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    formatter: function() {\r\n                        if( this.key.length > 8) {\r\n                            return this.key.substring(0, 8) + '...';\r\n                        }\r\n                        return this.key\r\n                    },\r\n                    distance: -20,\r\n                }\r\n            }\r\n        },\r\n\r\n        legend: {\r\n            enabled: false,\r\n            align: 'right',\r\n            layout: 'horizontal',\r\n            verticalAlign: 'bottom',\r\n        },\r\n\r\n        tooltip: {\r\n            pointFormatter: function() {\r\n                return `${this.percentage.toFixed(2)}% (${this.y.toLocaleString()}관)`\r\n            }\r\n        },\r\n\r\n        series: [{\r\n            data: pieChartData,\r\n            showInLegend: true,\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-white\">\r\n            <div className=\"mt-3 border-bottom\">\r\n                <h5>{props && props.title} <small className=\"ml-3\">{props.date}</small></h5>\r\n            </div>\r\n            <div>\r\n            <HighchartsReact \r\n              highcharts={Highcharts}\r\n              options={options}\r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Theaters;","import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nrequire('highcharts/modules/annotations')(Highcharts);\r\n\r\nconst Trend = (props) => {\r\n    const series = props.data ? props.data.series : null,\r\n          categories = props.data ? props.data.categories : null;\r\n   \r\n    Highcharts.setOptions({\r\n        lang: {\r\n            thousandsSep: ','\r\n        }\r\n    });\r\n          \r\n    const options = {\r\n        chart: {\r\n            type: 'area',\r\n            height: 241,\r\n        },\r\n\r\n        title: {\r\n            text: undefined\r\n        },\r\n        \r\n        credits: {\r\n            enabled: false\r\n        },\r\n\r\n        xAxis: {\r\n            categories: categories,\r\n            tickPositioner: function() {\r\n                \r\n                const categoryLength = this.categories.length;\r\n                let positions = [];\r\n               \r\n                if( categoryLength <= 8 ) {\r\n                    return;\r\n                } else if ( categoryLength > 8 && categoryLength % 2 !== 0 ){\r\n                    for(let i = 0; i < categoryLength; i += 2) {\r\n                        positions.push(i);\r\n                    }\r\n                    return positions;\r\n                } else if ( categoryLength > 8 && categoryLength % 2 === 0 ){\r\n                    for(let i = 0; i < categoryLength; i += 3) {\r\n                        positions.push(i);\r\n                    }\r\n                    positions.push(categoryLength - 1);\r\n                    return positions;\r\n                }\r\n            \r\n                \r\n            }\r\n        },\r\n\r\n        yAxis: {\r\n            title: undefined,\r\n            min: 0,\r\n            labels: {\r\n                formatter: function() {\r\n                    let value = this.value,\r\n                        unit = '';\r\n\r\n                    if( value >= 10000 && value < 100000000) { //관객수: 만부터 1억까지\r\n                        value = value / 10000;\r\n                        unit = '만';\r\n                    } else if ( value >= 100000000 && value < 1000000000000) { // 매출액: 1억부터 1조까지\r\n                        value = value / 100000000;\r\n                        unit = '억'\r\n                    }\r\n\r\n                    return value.toLocaleString() + unit;\r\n                }\r\n            }\r\n        },\r\n\r\n        plotOptions: {\r\n            series: {\r\n                color: '#5591f4',\r\n                marker: {\r\n                    fillColor: '#FFFFFF',\r\n                    lineWidth: 2,\r\n                    lineColor: null\r\n                },\r\n                fillOpacity: 0.1\r\n            }\r\n\r\n        },\r\n\r\n        legend: {\r\n            enabled: false\r\n        },\r\n\r\n        tooltip: {\r\n            pointFormatter: function() {\r\n                return this.y.toLocaleString() + this.series.userOptions.tooltipUnit;\r\n            }\r\n        },\r\n\r\n        series: series,\r\n\r\n        // annotations: [{\r\n        //     labels: [{ \r\n        //         point: 'annotation',\r\n        //         text: '개봉일'\r\n        //     }]\r\n        // }],\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-white\">\r\n            <div className=\"mt-3 border-bottom\">\r\n                 <h5>{props && props.title} <small className=\"ml-3\">{props.date}</small></h5>\r\n            </div>\r\n            <div>\r\n            <HighchartsReact \r\n              highcharts={Highcharts}\r\n              options={options}\r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trend; ","//import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Rank from './Rank';\r\nimport Theaters from './Theaters';\r\nimport Trend from './Trend';\r\n\r\nclass DashboardByDate extends Component {\r\n    render() {\r\n        const { title, daily, cumulative, theaters, trend } = this.props.data;\r\n        const date = title.date,\r\n              year = date.substr(0,4),\r\n              month = date.substr(4,2),\r\n              day = date.substr(6,5),\r\n              formattedDate =  `${year}-${month}-${day} 기준`;\r\n\r\n        const dashboard = (\r\n            <>\r\n            <Row className=\"mt-3 bg-light\">\r\n                <Col xs={12} sm={3} md={4}>\r\n                    <Rank\r\n                      title={title && title.daily}\r\n                      date={formattedDate}\r\n                      data={daily}\r\n                      click={this.props.change}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={12} sm={3} md={4}>\r\n                    <Rank\r\n                      title={title && title.cumulative}\r\n                      date={formattedDate}\r\n                      data={cumulative}\r\n                      click={this.props.change}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={12} sm={6} md={4}>\r\n                    <Theaters\r\n                      title={title && title.theaters}\r\n                      date={formattedDate}\r\n                      data={theaters}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Row className=\"bg-light\">\r\n                <Col xs={12} sm={12} md={12} className=\"mb-3\">\r\n                    <Trend\r\n                      title={title && title.trend}\r\n                      date={formattedDate}\r\n                      data={trend}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            </>\r\n        );\r\n\r\n        //const loadingMessage =  <p className=\"mt-3\">데이터 로드 중입니다...</p>;\r\n\r\n        return (\r\n            <>\r\n            { dashboard }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardByDate;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nconst DashboardByTitle = (props) => {\r\n    const dashboard = (\r\n        <div className=\"bg-white\">\r\n            <div className=\"mt-3 border-bottom\">\r\n                <h5>{props.data && props.data[0].movieNm}</h5>\r\n            </div>\r\n            <div>\r\n                <Table className=\"bg-white mt-2\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>날짜</th>\r\n                            <th>순위</th>\r\n                            <th>매출</th>\r\n                            <th>누적매출</th>\r\n                            <th>관객</th>\r\n                            <th>누적관객</th>\r\n                            <th>상영관수</th>\r\n                            <th>상영횟수</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.data && props.data.map((data, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{data.date}</td>\r\n                                    <td>{data.rank}</td>\r\n                                    <td>{data.salesAmt.toLocaleString()}</td>\r\n                                    <td>{data.salesAcc.toLocaleString()}</td>\r\n                                    <td>{data.audiCnt.toLocaleString()}</td>\r\n                                    <td>{data.audiAcc.toLocaleString()}</td>\r\n                                    <td>{data.scrnCnt.toLocaleString()}</td>\r\n                                    <td>{data.showcnt.toLocaleString()}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const errorMessage = <p>데이터가 없습니다. 2019년 내 영화제목을 입력해주세요. (예: 알라딘, 극한직업, 말모이 등...)</p>\r\n\r\n    return (\r\n        <>\r\n        { props.data ? dashboard : errorMessage }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DashboardByTitle;","const getTitleData = (rawdata, date, movieName) => {\r\n    let titleData = [],\r\n        filtered = rawdata.filter( data => data.movieNm === movieName );\r\n    if ( filtered.length === 0 ) {\r\n        return null;\r\n    }\r\n    \r\n    filtered.forEach( data => {\r\n        const { rank, movieNm, movieCd, openDt, salesAmt, salesAcc, audiCnt, audiAcc, scrnCnt, showcnt, date } = data;\r\n        const tempObj = { rank, movieNm, movieCd, openDt, salesAmt, salesAcc, audiCnt, audiAcc, scrnCnt, showcnt, date };\r\n        titleData.push(tempObj);\r\n    });\r\n\r\n    return titleData;\r\n}\r\n\r\nconst getDefaultData = (data, date, isAttendance = true) => {\r\n    const title4Attendance = { date, daily: \"관객수\", cumulative: \"누적관객수\", theaters: \"상영관수\", trend: \"\" },\r\n          title4Income = { date, daily: \"수입\", cumulative: \"누적수입\", theaters: \"상영관수\", trend: \"\"};\r\n\r\n    let defaultData = {\r\n        title: isAttendance ? title4Attendance : title4Income,\r\n        daily: [],\r\n        cumulative: [],\r\n        theaters: [],\r\n        trend: null,\r\n        rawdata: data,\r\n    }\r\n\r\n    let movieName = [],\r\n        targetMovies = [],\r\n        rawdata = data,\r\n        targetData = rawdata.filter( data => data.date === date ),\r\n        dataKey = isAttendance ? 'audiCnt' : 'salesAmt',\r\n        unit = isAttendance ? '명' : '원';\r\n\r\n    // 1. daily,\r\n    for( let i = 0; i < 5; i++ ) {\r\n        let daily = { movieCode: `daily${targetData[i].movieCd}`, movieName: targetData[i].movieNm, value: targetData[i][dataKey].toLocaleString() + unit },\r\n            tempObject = { name: targetData[i].movieNm, data: [] };\r\n        \r\n        defaultData['daily'].push(daily);\r\n\r\n        movieName.push(tempObject);\r\n        targetMovies.push(targetData[i].movieNm);\r\n    }\r\n    dataKey = isAttendance ? 'audiAcc' : 'salesAcc';\r\n    // 2. cumulative\r\n    targetData.sort((a, b) => b[dataKey] - a[dataKey]);\r\n    for ( let i = 0; i < 5; i++ ) {\r\n        let cumulative = { movieCode: `cumulative${targetData[i].movieCd}`, movieName: targetData[i].movieNm, value: targetData[i][dataKey].toLocaleString() + unit };\r\n        defaultData['cumulative'].push(cumulative);\r\n    }\r\n\r\n    // 3. theaters\r\n    targetData.sort((a, b) => b.scrnCnt - a.scrnCnt);\r\n    for( let i = 0; i < 5; i++ ) {\r\n        let theaters = { name: targetData[i].movieNm, y: targetData[i].scrnCnt };\r\n        defaultData['theaters'].push(theaters);\r\n    }\r\n\r\n    // 4. Trend\r\n    defaultData.trend = getTrendData(rawdata, defaultData.daily[0].movieCode, date, isAttendance);\r\n    defaultData.title.trend = defaultData.trend.title;\r\n   \r\n    return defaultData;\r\n}\r\n\r\nconst getTrendData = (rawdata, clicked, date, isAttendance) => {\r\n    let trendData = null,\r\n        categories = [],\r\n        series = [],\r\n        data = [],\r\n        filtered = null,\r\n        targetMovieCode = clicked.replace(/daily|cumulative/g, \"\"),\r\n        dataType = clicked.replace(/[0-9]*/g, \"\"),\r\n        lastIndex = 0,\r\n        value = '',\r\n        title = '',\r\n        //releaseDate = '',\r\n        tooltipUnit = '명';\r\n \r\n    // rawdata에서 clicked영화만 추출\r\n    filtered = rawdata.filter( rawdata => rawdata.movieCd === targetMovieCode );\r\n\r\n    // filter를 오늘까지 자름\r\n    lastIndex = filtered.findIndex( filtered => filtered.date === date );\r\n    if ( isAttendance ) {\r\n        value = dataType === \"daily\" ? \"audiCnt\" : \"audiAcc\";\r\n        title = dataType === \"daily\" ? `${filtered[0].movieNm} 일별 관객수` : `${filtered[0].movieNm} 일별 누적관객수`;\r\n    } else {\r\n        value = dataType === \"daily\" ? \"salesAmt\" : \"salesAcc\";\r\n        title = dataType === \"daily\" ? `${filtered[0].movieNm} 일별 수입` : `${filtered[0].movieNm} 일별 누적수입`;\r\n        tooltipUnit = '원';\r\n    }\r\n\r\n    //releaseDate = filtered[0].openDt.replace(/-/g, '');\r\n\r\n    for(let i = 0; i <= lastIndex; i++) {\r\n        let formattedDate = getTrendDate(filtered[i].date),\r\n            //seriesData = ( filtered[i].date !== releaseDate ) ? {y: filtered[i][value] } :  { y: filtered[i][value], id: 'annotation' };\r\n            seriesData = filtered[i][value];\r\n\r\n        categories.push(formattedDate); // x축 날짜 데이터 삽입\r\n        data.push(seriesData);\r\n    }\r\n\r\n    // trend data구조에 맞게 처리\r\n    series.push({ name: filtered[0].movieNm, data, tooltipUnit });\r\n    trendData = { categories, series, title };\r\n\r\n\r\n    // return trend data\r\n    return trendData;\r\n}\r\n\r\nconst getTrendDate = (date) => {\r\n    // 1. date포맷 변경: \"20190101\" -> \"2019-01-01\" \r\n    let year = date.substr(0, 4),\r\n        month = date.substr(4, 2),\r\n        day = date.substr(6, 5),\r\n        formattedDate = `${year}-${month}-${day}`;\r\n    \r\n    // 2. Date 객체 생성\r\n    let dateObject = new Date(formattedDate);\r\n\r\n    // 3. getDay로 요일 생성\r\n    let weekday = dateObject.getDay();\r\n    let weekdayArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n\r\n    // 4. 요일 + 달.일 형식으로 변경\r\n    let result = `${month}.${day} <br /> ${weekdayArray[weekday]}`;\r\n\r\n    return result;\r\n}\r\n\r\nconst getDate = (date) => {\r\n    let isNow = (date.getFullYear() === 2020),\r\n        month = '' + (date.getMonth() + 1),\r\n        day = '' + date.getDate(),\r\n        year = isNow ? date.getFullYear() - 1 : date.getFullYear();\r\n    \r\n    if (month.length < 2) {\r\n        month = '0' + month;\r\n    }\r\n\r\n    if (day.length < 2) {\r\n        day = '0' + day;\r\n    }\r\nconsole.log([year, month, day].join(''));\r\n    return [year, month, day].join('');\r\n}\r\n\r\n\r\nconst getSearchResultData = (movieName) => {\r\n    console.log('dataprocessing', movieName);\r\n}\r\n\r\nexport default getDefaultData;\r\nexport { getTrendData, getDate, getSearchResultData, getTitleData };","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    const style = {\r\n        fontSize: \"1rem\"\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"text-center\">\r\n                    <p style={style}>대시보드: 1년 전 영화순위 <br />\r\n                    Developed by Dongwook Kim (dongwook224@naver.com)</p>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport TopNav from './components/TopNav';\r\nimport Dashboard from './components/DashboardByDate';\r\nimport DashboardByTitle from './components/DashboardByTitle';\r\nimport getDefaultData, { getDate, getTrendData, getTitleData } from './common/dataProcessing';\r\nimport axios from 'axios';\r\nimport Footer from './components/Footer';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isAttendace: true,\r\n            searchValue: '',\r\n            buttonValue: null,\r\n            titleData : null,\r\n            searchDate: new Date(new Date().setFullYear(new Date().getFullYear() - 2)),\r\n            currentDate: new Date(new Date().setFullYear(new Date().getFullYear() - 2)),\r\n            dropdownTitle: '날짜',\r\n            isLoading: true,\r\n            isSearch: false,\r\n            title: null,\r\n            daily: null,\r\n            cumulative: null,\r\n            theaters: null,\r\n            trend: null,\r\n            rawdata : null,\r\n            isTitle: false,\r\n            loadingMessage: <p className=\"mt-3\">데이터 로드 중입니다...</p>\r\n        };\r\n\r\n        this.handleMovienameClick = this.handleMovienameClick.bind(this);\r\n        this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    handleDropdownSelect(event) {\r\n        const dropdownTitle = (event === \"movieName\") ? \"영화명\" : \"날짜\";\r\n\r\n        this.setState({\r\n            ...this.state, ...{\r\n                dropdownTitle\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSearchChange(event) {\r\n        this.setState({\r\n           ...this.state, ...{ \r\n               searchValue: event.target.value\r\n           }\r\n        });\r\n    }\r\n\r\n    handleDatePickerChange(date) {\r\n        this.setState({\r\n            ...this.state, ...{\r\n                searchDate: date\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isTitle = this.state.dropdownTitle === \"영화명\";\r\n        let data = null;\r\n        \r\n        if( isTitle ) {\r\n            data = getTitleData(this.state.rawdata, getDate(this.state.currentDate), this.state.searchValue);\r\n            this.setState({\r\n                ...this.state, ...{\r\n                    isTitle: true,\r\n                    titleData: data\r\n                }\r\n            });\r\n        } else {\r\n            \r\n            data = getDefaultData(this.state.rawdata, getDate(this.state.searchDate), this.state.isAttendace);\r\n            const { title, daily, cumulative, theaters, trend } = data;\r\n        \r\n            this.setState({\r\n                ...this.state, ...{\r\n                    isSearch: true,\r\n                    currentDate: this.state.searchDate,\r\n                    isTitle,\r\n                    title,\r\n                    daily,\r\n                    cumulative,\r\n                    theaters,\r\n                    trend\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleMovienameClick(event) {\r\n        // 1. 데이터 재처리\r\n        let clicked = event.target.getAttribute('data-title'),\r\n            date = this.state.isSearch ? getDate(this.state.searchDate) : getDate(this.state.currentDate),\r\n            trend = getTrendData(this.state.rawdata, clicked, date, this.state.isAttendace),\r\n            title = { ...this.state.title, trend: trend.title };\r\n \r\n        //2. 재처리된 데이터 setState로 변경\r\n        this.setState({\r\n            ...this.state, ...{\r\n                isLoading: false,\r\n                trend,\r\n                title\r\n            }\r\n        });\r\n    }\r\n\r\n    handleButtonClick(value) {\r\n        let isAttendace = ( value === 'attendance' ? true : false ),\r\n            today = getDate( this.state.currentDate ),\r\n            defaultData = getDefaultData(this.state.rawdata, today, isAttendace);\r\n\r\n        const title = defaultData.title,\r\n              daily = defaultData.daily,\r\n              cumulative = defaultData.cumulative,\r\n              theaters  = defaultData.theaters,\r\n              trend = defaultData.trend,\r\n              rawdata = defaultData.rawdata;\r\n    \r\n        this.setState({\r\n            ...this.state, ...{\r\n                isLoading: false,\r\n                isAttendace,\r\n                buttonValue: value,\r\n                title,\r\n                daily,\r\n                cumulative,\r\n                theaters,\r\n                trend,\r\n                rawdata\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('../2019.json')\r\n             .then( response => {\r\n                let d = new Date();\r\n                d.setFullYear(2020);\r\n                let today = getDate(d);\r\n                let defaultData = getDefaultData(response.data.data, today);\r\n\r\n                const title = defaultData.title,\r\n                      daily = defaultData.daily,\r\n                      cumulative = defaultData.cumulative,\r\n                      theaters  = defaultData.theaters,\r\n                      trend = defaultData.trend,\r\n                      rawdata = defaultData.rawdata;\r\n            \r\n                this.setState({\r\n                    ...this.state, ...{\r\n                        isLoading: false,\r\n                        title,\r\n                        daily,\r\n                        cumulative,\r\n                        theaters,\r\n                        trend,\r\n                        rawdata\r\n                    }\r\n                });\r\n          })\r\n          .catch( error => {\r\n              console.log('error', error);\r\n              this.setState({\r\n                  ...this.state, ...{\r\n                      loadingMessage: <p>데이터 로드 중 에러가 발생하였습니다</p>\r\n                  }\r\n              })\r\n\r\n          });\r\n    }\r\n\r\n    render() {\r\n        const isTitle = this.state.isTitle,\r\n              dashboardData = { ...this.state },\r\n              dashboard = <Dashboard data={dashboardData} change={this.handleMovienameClick} />,\r\n              dashboardByTitle = <DashboardByTitle data={this.state.titleData} />;\r\n\r\n        return (\r\n            <>  \r\n                <Container>\r\n                    <TopNav\r\n                      dropdownTitle={this.state.dropdownTitle}\r\n                      dropdownSelect={this.handleDropdownSelect}\r\n                      searchDate={this.state.searchDate}\r\n                      searchChange={this.handleSearchChange}\r\n                      datePickerChange={this.handleDatePickerChange}\r\n                      submit={this.handleSubmit}\r\n                      buttonClick={this.handleButtonClick}\r\n                      buttonValue={this.state.buttonValue}\r\n                    />\r\n                    \r\n                    { dashboardData.isLoading ? dashboardData.loadingMessage : (isTitle ? dashboardByTitle : dashboard) }\r\n                    <Footer />\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM  from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}