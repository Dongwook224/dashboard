{"ast":null,"code":"import _objectSpread from \"D:\\\\VisualStudioCode\\\\dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\VisualStudioCode\\\\dashboard\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport template from './components/template';\nimport Selection from './components/Selection';\nimport Dashboard from './components/Dashboard.jsx';\nimport dataProcessing, { fossilFuelData, hydroElectricData, renewableEnergyData, biomassData } from './components/dataProcessing';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = template;\n\n    this.copyDataSeries = (obj = {}) => {\n      this.setState(_objectSpread({}, obj, {\n        charts: [{\n          serie: fossilFuelData,\n          title: \"Fossil Fuel\"\n        }, {\n          serie: hydroElectricData,\n          title: \"Hydroelectric Energy\"\n        }, {\n          serie: renewableEnergyData,\n          title: \"Biomass\"\n        }, {\n          serie: biomassData,\n          title: \"Renewable Energy\"\n        }]\n      }));\n    };\n\n    this.handleSubmit = e => {\n      debugger;\n      let msg = dataProcessing(this.state.yearFrom, this.state.yearTo, this.state.msg);\n      this.copyDataSeries({\n        msg\n      });\n      e.preventDefault();\n    };\n\n    this.handleChangeYear = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    dataProcessing(this.state.yearFrom, this.state.yearTo, this.state.msg);\n    this.copyDataSeries();\n  }\n\n  componentDidUpdate(prepProps, prevState) {\n    if (prevState.yearFrom !== this.state.yearFrom) {\n      this.handleChangeSelect();\n    }\n\n    if (prevState.yearTo !== this.state.yearTo) {\n      this.handleChangeSelect();\n    }\n  }\n\n  handleChangeSelect() {\n    let msg = dataProcessing(this.state.yearFrom, this.state.yearTo);\n    this.copyDataSeries({\n      msg: msg\n    });\n  }\n\n  render() {\n    debugger;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"container bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Net Energy Generation in the United States\"), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Source: \", React.createElement(\"a\", {\n      href: \"https://www.eia.gov\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"U.S. Engergy Information Administration\"), \" \")), React.createElement(\"div\", {\n      className: \"container mb-5 pb-3 bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center mb-0 pt-3 bold\" + (this.state.msg !== \"Select the range\" ? \"text-danger\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.msg)), React.createElement(Selection, {\n      yearFrom: this.state.yearFrom,\n      yearTo: this.state.yearTo,\n      onChangeYear: this.handleChangeYear,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Dashboard, {\n      userConfig: this.state.userConfig,\n      charts: this.state.charts,\n      key: this.state.charts.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/VisualStudioCode/dashboard/src/App.js"],"names":["React","Component","template","Selection","Dashboard","dataProcessing","fossilFuelData","hydroElectricData","renewableEnergyData","biomassData","App","state","copyDataSeries","obj","setState","charts","serie","title","handleSubmit","e","msg","yearFrom","yearTo","preventDefault","handleChangeYear","target","name","value","componentDidMount","componentDidUpdate","prepProps","prevState","handleChangeSelect","render","userConfig"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport template from './components/template';\r\nimport Selection from './components/Selection';\r\nimport Dashboard from './components/Dashboard.jsx';\r\nimport dataProcessing, {\r\n    fossilFuelData,\r\n    hydroElectricData,\r\n    renewableEnergyData,\r\n    biomassData\r\n} from './components/dataProcessing'\r\n\r\nclass App extends Component {\r\n    state = template;\r\n\r\n    copyDataSeries = (obj = {}) => {\r\n        this.setState({\r\n            ...obj,\r\n\r\n            charts: [\r\n                { serie: fossilFuelData, title: \"Fossil Fuel\" },\r\n                { serie: hydroElectricData, title: \"Hydroelectric Energy\" },\r\n                { serie: renewableEnergyData, title: \"Biomass\" },\r\n                { serie: biomassData, title: \"Renewable Energy\" }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        dataProcessing(this.state.yearFrom, this.state.yearTo, this.state.msg);\r\n        this.copyDataSeries();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        debugger;\r\n        let msg = dataProcessing(this.state.yearFrom, this.state.yearTo, this.state.msg);\r\n        this.copyDataSeries({msg});\r\n        e.preventDefault();\r\n    }\r\n\r\n    componentDidUpdate(prepProps, prevState) {\r\n        if (prevState.yearFrom !== this.state.yearFrom) {\r\n            this.handleChangeSelect();\r\n        }\r\n\r\n        if(prevState.yearTo !== this.state.yearTo) {\r\n            this.handleChangeSelect();\r\n        }\r\n    }\r\n\r\n    handleChangeSelect() {\r\n        let msg = dataProcessing(this.state.yearFrom, this.state.yearTo);\r\n        this.copyDataSeries({msg: msg});\r\n    }\r\n\r\n    handleChangeYear = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        return (\r\n            <>\r\n            <div className=\"container bg-light\">\r\n                <h1 className=\"text-center mt-5\">\r\n                    Net Energy Generation in the United States\r\n                </h1>\r\n                <p className=\"text-center\">\r\n                    Source: <a href=\"https://www.eia.gov\">U.S. Engergy Information Administration</a>{\" \"}\r\n                </p>\r\n            </div>\r\n            <div className=\"container mb-5 pb-3 bg-light\">\r\n                <div className={\"text-center mb-0 pt-3 bold\" + (this.state.msg !== \"Select the range\" ? \"text-danger\" : \"\")}>\r\n                <strong>{this.state.msg}</strong>\r\n                </div>\r\n                <Selection\r\n                    yearFrom={this.state.yearFrom}\r\n                    yearTo={this.state.yearTo}\r\n                    onChangeYear={this.handleChangeYear}\r\n                    onSubmit={this.handleSubmit}\r\n                />\r\n                <Dashboard\r\n                    userConfig={this.state.userConfig}\r\n                    charts={this.state.charts}\r\n                    key={this.state.charts.name}\r\n                />\r\n                \r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}