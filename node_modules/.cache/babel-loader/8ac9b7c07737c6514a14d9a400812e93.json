{"ast":null,"code":"import _objectSpread from \"D:\\\\VisualStudioCode\\\\dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\VisualStudioCode\\\\dashboard\\\\src\\\\components\\\\Chart.jsx\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nclass Chart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartData: _objectSpread({\n        chart: {\n          type: 'pie',\n          marginBottom: 100\n        },\n        title: {\n          text: this.props.titleName\n        },\n        subtitle: {\n          text: (this.props.data.reduce((accumulator, obj) => accumulator + obj.y, 0) / 1000000).toFixed(2) + ' Twh',\n          floating: true,\n          style: {\n            fontSize: 14,\n            fontWeight: 'bold',\n            color: '#000000'\n          },\n          y: 170\n        },\n        series: [{\n          data: this.props.data\n        }]\n      }, this.props.userConfig)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      this.setState({\n        chartData: _objectSpread({}, this.state.chartData, {\n          subtitle: {\n            text: (this.props.data.reduce((accumulator, obj) => accumulator + obj.y, 0) / 1000000).toFixed(2) + ' Twh'\n          },\n          series: [{\n            data: this.props.data\n          }]\n        })\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["D:/VisualStudioCode/dashboard/src/components/Chart.jsx"],"names":["React","Component","Highcharts","HighchartsReact","Chart","state","chartData","chart","type","marginBottom","title","text","props","titleName","subtitle","data","reduce","accumulator","obj","y","toFixed","floating","style","fontSize","fontWeight","color","series","userConfig","componentDidUpdate","prevProps","prevState","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAElB;AACJC,MAAAA,SAAS;AACLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,KADH;AAEHC,UAAAA,YAAY,EAAE;AAFX,SADF;AAMLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC;AADd,SANF;AAULC,QAAAA,QAAQ,EAAE;AACNH,UAAAA,IAAI,EACJ,CACI,KAAKC,KAAL,CAAWG,IAAX,CAAgBC,MAAhB,CACI,CAACC,WAAD,EAAcC,GAAd,KAAsBD,WAAW,GAAGC,GAAG,CAACC,CAD5C,EAEI,CAFJ,IAGI,OAJR,EAKEC,OALF,CAKU,CALV,IAKe,MAPT;AAQNC,UAAAA,QAAQ,EAAE,IARJ;AASNC,UAAAA,KAAK,EAAE;AACHC,YAAAA,QAAQ,EAAE,EADP;AAEHC,YAAAA,UAAU,EAAE,MAFT;AAGHC,YAAAA,KAAK,EAAE;AAHJ,WATD;AAcNN,UAAAA,CAAC,EAAE;AAdG,SAVL;AA2BLO,QAAAA,MAAM,EAAE,CACJ;AACIX,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AADrB,SADI;AA3BH,SAgCF,KAAKH,KAAL,CAAWe,UAhCT;AADL,KAFkB;AAAA;;AAuC1BC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAG,KAAKlB,KAAL,CAAWG,IAAX,KAAoBc,SAAS,CAACd,IAAjC,EAAuC;AACnC,WAAKgB,QAAL,CAAc;AACVzB,QAAAA,SAAS,oBACF,KAAKD,KAAL,CAAWC,SADT;AAELQ,UAAAA,QAAQ,EAAE;AACNH,YAAAA,IAAI,EACJ,CACI,KAAKC,KAAL,CAAWG,IAAX,CAAgBC,MAAhB,CACI,CAACC,WAAD,EAAcC,GAAd,KAAsBD,WAAW,GAAGC,GAAG,CAACC,CAD5C,EAEI,CAFJ,IAGI,OAJR,EAKEC,OALF,CAKU,CALV,IAKe;AAPT,WAFL;AAYLM,UAAAA,MAAM,EAAE,CACJ;AACIX,YAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AADrB,WADI;AAZH;AADC,OAAd;AAoBH;AACJ;;AAEDiB,EAAAA,MAAM,GAAG;AACL,WACI,0CACA,oBAAC,eAAD;AACI,MAAA,UAAU,EAAE9B,UADhB;AAEI,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWC,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAQH;;AAzEyB;;AA4E9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nclass Chart extends Component {\r\n    \r\n    state = {\r\n        chartData: {\r\n            chart: {\r\n                type: 'pie',\r\n                marginBottom: 100\r\n            },\r\n\r\n            title: {\r\n                text: this.props.titleName\r\n            },\r\n\r\n            subtitle: {\r\n                text: \r\n                (\r\n                    this.props.data.reduce(\r\n                        (accumulator, obj) => accumulator + obj.y,\r\n                        0 \r\n                    ) / 1000000\r\n                ).toFixed(2) + ' Twh',\r\n                floating: true,\r\n                style: {\r\n                    fontSize: 14,\r\n                    fontWeight: 'bold',\r\n                    color: '#000000'\r\n                },\r\n                y: 170\r\n            },\r\n\r\n            series: [\r\n                {\r\n                    data: this.props.data\r\n                }\r\n            ],\r\n            ...this.props.userConfig\r\n          }\r\n        };\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.data !== prevProps.data) {\r\n            this.setState({\r\n                chartData: {\r\n                    ...this.state.chartData,\r\n                    subtitle: {\r\n                        text: \r\n                        (\r\n                            this.props.data.reduce(\r\n                                (accumulator, obj) => accumulator + obj.y,\r\n                                0\r\n                            ) / 1000000\r\n                        ).toFixed(2) + ' Twh'\r\n                    },\r\n\r\n                    series: [\r\n                        {\r\n                            data: this.props.data\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={this.state.chartData}\r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}