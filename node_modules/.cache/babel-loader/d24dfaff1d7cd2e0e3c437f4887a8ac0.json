{"ast":null,"code":"import _objectSpread from \"D:\\\\VisualStudioCode\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\VisualStudioCode\\\\dashboard\\\\src\\\\components\\\\Dashboard.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Attendance from './Attendance';\nimport Theaters from './Theaters';\nimport Trend from './Trend';\nimport getDefaultData, { getTrendData, getDate } from '../common/dataProcessing';\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      title: null,\n      daily: null,\n      cumulative: null,\n      theaters: null,\n      trend: null,\n      rawdata: null,\n      error: \"\",\n      searchDate: null\n    };\n    this.handleMovienameClick = this.handleMovienameClick.bind(this);\n  }\n\n  async componentDidMount() {\n    let defaultData = await axios.get('../2019.json').then(response => {\n      let today = getDate(new Date());\n      return getDefaultData(response, today);\n    }).catch(error => {\n      console.log('error: ', error);\n    });\n    const title = defaultData.title,\n          daily = defaultData.daily,\n          cumulative = defaultData.cumulative,\n          theaters = defaultData.theaters,\n          trend = defaultData.trend,\n          rawdata = defaultData.rawdata;\n    this.setState(_objectSpread({}, this.state, {}, {\n      isLoading: false,\n      title,\n      daily,\n      cumulative,\n      theaters,\n      trend,\n      rawdata\n    }));\n  }\n\n  handleMovienameClick(event) {\n    // 1. 데이터 재처리\n    let clicked = event.target.getAttribute('data-title'),\n        trend = getTrendData(this.state.rawdata, clicked),\n        title = _objectSpread({}, this.state.title, {\n      trend: trend.title\n    }); //2. 재처리된 데이터 setState로 변경\n\n\n    this.setState(_objectSpread({}, this.state, {}, {\n      isLoading: false,\n      trend,\n      title\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          title = _this$state.title,\n          daily = _this$state.daily,\n          cumulative = _this$state.cumulative,\n          theaters = _this$state.theaters,\n          trend = _this$state.trend;\n    const dashboard = React.createElement(React.Fragment, null, React.createElement(Row, {\n      className: \"mt-3 bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: 3,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Attendance, {\n      title: title && title.daily,\n      data: daily,\n      click: this.handleMovienameClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 12,\n      sm: 3,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Attendance, {\n      title: title && title.cumulative,\n      data: cumulative,\n      click: this.handleMovienameClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Theaters, {\n      title: title && title.theaters,\n      data: theaters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"my-3 bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Trend, {\n      title: title && title.trend,\n      data: trend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))));\n    const loadingMessage = React.createElement(\"p\", {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"\\uB370\\uC774\\uD130 \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\");\n    return React.createElement(React.Fragment, null, isLoading ? loadingMessage : dashboard);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["D:/VisualStudioCode/dashboard/src/components/Dashboard.js"],"names":["axios","React","Component","Row","Col","Attendance","Theaters","Trend","getDefaultData","getTrendData","getDate","Dashboard","constructor","state","isLoading","title","daily","cumulative","theaters","trend","rawdata","error","searchDate","handleMovienameClick","bind","componentDidMount","defaultData","get","then","response","today","Date","catch","console","log","setState","event","clicked","target","getAttribute","render","dashboard","loadingMessage"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Attendance from './Attendance';\r\nimport Theaters from './Theaters';\r\nimport Trend from './Trend';\r\nimport getDefaultData, { getTrendData, getDate } from '../common/dataProcessing';\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            isLoading: true,\r\n            title: null,\r\n            daily: null,\r\n            cumulative: null,\r\n            theaters: null,\r\n            trend: null,\r\n            rawdata : null,\r\n            error: \"\",\r\n            searchDate: null\r\n        };\r\n        this.handleMovienameClick = this.handleMovienameClick.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let defaultData = await axios.get('../2019.json')\r\n                                     .then( response => {\r\n                                         let today =  getDate(new Date());\r\n                                         return getDefaultData(response, today);\r\n                                      })\r\n                                     .catch( error => {\r\n                                        console.log('error: ', error);\r\n                                     })\r\n        \r\n        const title = defaultData.title,\r\n              daily = defaultData.daily,\r\n              cumulative = defaultData.cumulative,\r\n              theaters  = defaultData.theaters,\r\n              trend = defaultData.trend,\r\n              rawdata = defaultData.rawdata;\r\n        \r\n        this.setState({\r\n            ...this.state, ...{\r\n                isLoading: false,\r\n                title,\r\n                daily,\r\n                cumulative,\r\n                theaters,\r\n                trend,\r\n                rawdata\r\n            }\r\n        })                 \r\n    }\r\n\r\n    handleMovienameClick(event) {\r\n        // 1. 데이터 재처리\r\n        let clicked = event.target.getAttribute('data-title'),\r\n            trend = getTrendData(this.state.rawdata, clicked),\r\n            title = { ...this.state.title, trend: trend.title };\r\n \r\n        //2. 재처리된 데이터 setState로 변경\r\n        this.setState({\r\n            ...this.state, ...{\r\n                isLoading: false,\r\n                trend,\r\n                title\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const { isLoading, title, daily, cumulative, theaters, trend } = this.state;\r\n             \r\n        const dashboard = (\r\n            <>\r\n            <Row className=\"mt-3 bg-light\">\r\n                <Col xs={12} sm={3} md={4}>\r\n                    <Attendance\r\n                      title={title && title.daily}\r\n                      data={daily}\r\n                      click={this.handleMovienameClick}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={12} sm={3} md={4}>\r\n                    <Attendance\r\n                      title={title && title.cumulative}\r\n                      data={cumulative}\r\n                      click={this.handleMovienameClick}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={12} sm={6} md={4}>\r\n                    <Theaters\r\n                      title={title && title.theaters}\r\n                      data={theaters}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Row className=\"my-3 bg-light\">\r\n                <Col xs={12} sm={12} md={12}>\r\n                    <Trend\r\n                      title={title && title.trend}\r\n                      data={trend}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            </>\r\n        );\r\n\r\n        const loadingMessage =  <p className=\"mt-3\">데이터 로드 중입니다...</p>;\r\n\r\n        return (\r\n            <>\r\n                { isLoading ? loadingMessage : dashboard }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}