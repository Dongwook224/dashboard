{"ast":null,"code":"import _objectSpread from \"D:\\\\VisualStudioCode\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\VisualStudioCode\\\\dashboard\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport TopNav from './components/TopNav';\nimport Dashboard from './components/Dashboard';\nimport getDefaultData, { getDate, getTrendData } from './common/dataProcessing';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchValue: '',\n      searchDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\n      dropdownTitle: '영화명',\n      isLoading: true,\n      title: null,\n      daily: null,\n      cumulative: null,\n      theaters: null,\n      trend: null,\n      rawdata: null,\n      error: \"\"\n    };\n    this.handleMovienameClick = this.handleMovienameClick.bind(this);\n    this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleDropdownSelect(event) {\n    const dropdownTitle = event === \"movieName\" ? \"영화명\" : \"날짜\";\n    this.setState(_objectSpread({}, this.state, {}, {\n      dropdownTitle\n    }));\n  }\n\n  handleSearchChange(event) {\n    this.setState(_objectSpread({}, this.state, {}, {\n      searchValue: event.target.value\n    }));\n  }\n\n  handleDatePickerChange(date) {\n    this.setState(_objectSpread({}, this.state, {}, {\n      searchDate: date\n    }));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); //debugger;\n    //getSearchResultData(this.state.searchValue);\n    // 1. 영화명인 경우\n\n    let defaultData = getDefaultData(this.state.rawdata, getDate(this.state.searchDate)); // 2. 날짜인 경우\n\n    this.setState(_objectSpread({}, this.state, {}, {\n      defaultData\n    }));\n  }\n\n  handleMovienameClick(event) {\n    // 1. 데이터 재처리\n    let clicked = event.target.getAttribute('data-title'),\n        trend = getTrendData(this.state.rawdata, clicked),\n        title = _objectSpread({}, this.state.title, {\n      trend: trend.title\n    }); //2. 재처리된 데이터 setState로 변경\n\n\n    this.setState(_objectSpread({}, this.state, {}, {\n      isLoading: false,\n      trend,\n      title\n    }));\n  }\n\n  componentDidMount() {\n    axios.get('../2019.json').then(response => {\n      let today = getDate(new Date()),\n          defaultData = getDefaultData(response, today);\n      const title = defaultData.title,\n            daily = defaultData.daily,\n            cumulative = defaultData.cumulative,\n            theaters = defaultData.theaters,\n            trend = defaultData.trend,\n            rawdata = defaultData.rawdata;\n      this.setState(_objectSpread({}, this.state, {}, {\n        isLoading: false,\n        title,\n        daily,\n        cumulative,\n        theaters,\n        trend,\n        rawdata\n      }));\n      console.log(this.state);\n    }).catch(error => console.log('error: ', error));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          title = _this$state.title,\n          daily = _this$state.daily,\n          cumulative = _this$state.cumulative,\n          theaters = _this$state.theaters,\n          trend = _this$state.trend;\n\n    const dashboardData = _objectSpread({}, this.state);\n\n    const dashboard = React.createElement(Dashboard, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }),\n          loadingMessage = React.createElement(\"p\", {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\uB370\\uC774\\uD130 \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\");\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(TopNav, {\n      dropdownTitle: this.state.dropdownTitle,\n      dropdownSelect: this.handleDropdownSelect,\n      searchDate: this.state.searchDate,\n      searchChange: this.handleSearchChange,\n      datePickerChange: this.handleDatePickerChange,\n      submit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), isLoading ? loadingMessage : dashboard));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/VisualStudioCode/dashboard/src/App.js"],"names":["React","Component","Container","TopNav","Dashboard","getDefaultData","getDate","getTrendData","axios","App","constructor","state","searchValue","searchDate","Date","setFullYear","getFullYear","dropdownTitle","isLoading","title","daily","cumulative","theaters","trend","rawdata","error","handleMovienameClick","bind","handleDropdownSelect","handleSearchChange","handleDatePickerChange","handleSubmit","event","setState","target","value","date","preventDefault","defaultData","clicked","getAttribute","componentDidMount","get","then","response","today","console","log","catch","render","dashboardData","dashboard","loadingMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport TopNav from './components/TopNav';\r\nimport Dashboard from './components/Dashboard';\r\nimport getDefaultData, { getDate, getTrendData } from './common/dataProcessing';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchValue: '',\r\n            searchDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\r\n            dropdownTitle: '영화명',\r\n            \r\n            isLoading: true,\r\n            title: null,\r\n            daily: null,\r\n            cumulative: null,\r\n            theaters: null,\r\n            trend: null,\r\n            rawdata : null,\r\n            error: \"\",\r\n        };\r\n\r\n        this.handleMovienameClick = this.handleMovienameClick.bind(this);\r\n        this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleDropdownSelect(event) {\r\n        const dropdownTitle = (event === \"movieName\") ? \"영화명\" : \"날짜\";\r\n\r\n        this.setState({\r\n            ...this.state, ...{\r\n                dropdownTitle\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSearchChange(event) {\r\n        this.setState({\r\n           ...this.state, ...{ \r\n               searchValue: event.target.value\r\n           }\r\n        });\r\n    }\r\n\r\n    handleDatePickerChange(date) {\r\n        this.setState({\r\n            ...this.state, ...{\r\n                searchDate: date\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        //debugger;\r\n        //getSearchResultData(this.state.searchValue);\r\n        // 1. 영화명인 경우\r\n        let defaultData = getDefaultData(this.state.rawdata, getDate(this.state.searchDate));\r\n\r\n        // 2. 날짜인 경우\r\n        this.setState({\r\n            ...this.state, ...{\r\n                defaultData\r\n            }\r\n        });\r\n    }\r\n\r\n    handleMovienameClick(event) {\r\n        // 1. 데이터 재처리\r\n        let clicked = event.target.getAttribute('data-title'),\r\n            trend = getTrendData(this.state.rawdata, clicked),\r\n            title = { ...this.state.title, trend: trend.title };\r\n \r\n        //2. 재처리된 데이터 setState로 변경\r\n        this.setState({\r\n            ...this.state, ...{\r\n                isLoading: false,\r\n                trend,\r\n                title\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('../2019.json')\r\n             .then( response => {\r\n                let today = getDate(new Date()),\r\n                    defaultData = getDefaultData(response, today);\r\n\r\n                const title = defaultData.title,\r\n                      daily = defaultData.daily,\r\n                      cumulative = defaultData.cumulative,\r\n                      theaters  = defaultData.theaters,\r\n                      trend = defaultData.trend,\r\n                      rawdata = defaultData.rawdata;\r\n            \r\n                this.setState({\r\n                    ...this.state, ...{\r\n                        isLoading: false,\r\n                        title,\r\n                        daily,\r\n                        cumulative,\r\n                        theaters,\r\n                        trend,\r\n                        rawdata\r\n                    }\r\n                });\r\n                console.log(this.state);\r\n          })\r\n          .catch( error => console.log('error: ', error));\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, title, daily, cumulative, theaters, trend } = this.state;\r\n        const dashboardData = { ...this.state };\r\n        const dashboard = <Dashboard data={this.state} />,\r\n              loadingMessage =  <p className=\"mt-3\">데이터 로드 중입니다...</p>;\r\n\r\n        return (\r\n            <>  \r\n                <Container>\r\n                    <TopNav\r\n                      dropdownTitle={this.state.dropdownTitle}\r\n                      dropdownSelect={this.handleDropdownSelect}\r\n                      searchDate={this.state.searchDate}\r\n                      searchChange={this.handleSearchChange}\r\n                      datePickerChange={this.handleDatePickerChange}\r\n                      submit={this.handleSubmit}\r\n                    />\r\n                    {isLoading ? loadingMessage : dashboard }\r\n                    \r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}