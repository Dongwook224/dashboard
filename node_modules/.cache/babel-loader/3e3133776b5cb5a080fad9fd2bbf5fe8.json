{"ast":null,"code":"import _objectSpread from \"D:\\\\VisualStudioCode\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\VisualStudioCode\\\\dashboard\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport TopNav from './components/TopNav';\nimport Dashboard from './components/Dashboard';\nimport DashboardByTitle from './components/DashboardByTitle';\nimport getDefaultData, { getDate, getTrendData, getTitleData } from './common/dataProcessing';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchValue: '',\n      titleData: null,\n      searchDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\n      currentDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\n      dropdownTitle: '영화명',\n      isLoading: true,\n      isSearch: false,\n      title: null,\n      daily: null,\n      cumulative: null,\n      theaters: null,\n      trend: null,\n      rawdata: null,\n      isTitle: false,\n      error: \"\"\n    };\n    this.handleMovienameClick = this.handleMovienameClick.bind(this);\n    this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleDropdownSelect(event) {\n    const dropdownTitle = event === \"movieName\" ? \"영화명\" : \"날짜\";\n    this.setState(_objectSpread({}, this.state, {}, {\n      dropdownTitle\n    }));\n  }\n\n  handleSearchChange(event) {\n    this.setState(_objectSpread({}, this.state, {}, {\n      searchValue: event.target.value\n    }));\n  }\n\n  handleDatePickerChange(date) {\n    this.setState(_objectSpread({}, this.state, {}, {\n      searchDate: date\n    }));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const isTitle = this.state.dropdownTitle === \"영화명\"; //getSearchResultData(this.state.searchValue);\n\n    let data = null;\n\n    if (isTitle) {\n      data = getTitleData(this.state.rawdata, getDate(this.state.currentDate), this.state.searchValue);\n      this.setState(_objectSpread({}, this.state, {}, {\n        titleData: data\n      }));\n    } else {\n      data = getDefaultData(this.state.rawdata, getDate(this.state.searchDate));\n      const _data = data,\n            title = _data.title,\n            daily = _data.daily,\n            cumulative = _data.cumulative,\n            theaters = _data.theaters,\n            trend = _data.trend;\n      this.setState(_objectSpread({}, this.state, {}, {\n        isSearch: true,\n        currentDate: this.state.searchDate,\n        isTitle,\n        title,\n        daily,\n        cumulative,\n        theaters,\n        trend\n      }));\n    }\n  }\n\n  handleMovienameClick(event) {\n    // 1. 데이터 재처리\n    debugger;\n\n    let clicked = event.target.getAttribute('data-title'),\n        date = this.state.isSearch ? getDate(this.state.searchDate) : getDate(this.state.currentDate),\n        trend = getTrendData(this.state.rawdata, clicked, date),\n        title = _objectSpread({}, this.state.title, {\n      trend: trend.title\n    }); //2. 재처리된 데이터 setState로 변경\n\n\n    this.setState(_objectSpread({}, this.state, {}, {\n      isLoading: false,\n      trend,\n      title\n    }));\n  }\n\n  componentDidMount() {\n    axios.get('../2019.json').then(response => {\n      let today = getDate(new Date()),\n          defaultData = getDefaultData(response.data.data, today);\n      const title = defaultData.title,\n            daily = defaultData.daily,\n            cumulative = defaultData.cumulative,\n            theaters = defaultData.theaters,\n            trend = defaultData.trend,\n            rawdata = defaultData.rawdata;\n      this.setState(_objectSpread({}, this.state, {}, {\n        isLoading: false,\n        title,\n        daily,\n        cumulative,\n        theaters,\n        trend,\n        rawdata\n      }));\n    }).catch(error => console.log('error: ', error));\n  }\n\n  render() {\n    //const { isLoading, title, daily, cumulative, theaters, trend } = this.state;\n    const isTitle = this.state.isTitle,\n          dashboardData = _objectSpread({}, this.state),\n          dashboard = React.createElement(Dashboard, {\n      data: dashboardData,\n      change: this.handleMovienameClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }),\n          dashboardByTitle = React.createElement(DashboardByTitle, {\n      data: this.state.titleData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }),\n          loadingMessage = React.createElement(\"p\", {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\uB370\\uC774\\uD130 \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\");\n\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(TopNav, {\n      dropdownTitle: this.state.dropdownTitle,\n      dropdownSelect: this.handleDropdownSelect,\n      searchDate: this.state.searchDate,\n      searchChange: this.handleSearchChange,\n      datePickerChange: this.handleDatePickerChange,\n      submit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), isTitle ? dashboardByTitle : dashboard));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/VisualStudioCode/dashboard/src/App.js"],"names":["React","Component","Container","TopNav","Dashboard","DashboardByTitle","getDefaultData","getDate","getTrendData","getTitleData","axios","App","constructor","state","searchValue","titleData","searchDate","Date","setFullYear","getFullYear","currentDate","dropdownTitle","isLoading","isSearch","title","daily","cumulative","theaters","trend","rawdata","isTitle","error","handleMovienameClick","bind","handleDropdownSelect","handleSearchChange","handleDatePickerChange","handleSubmit","event","setState","target","value","date","preventDefault","data","clicked","getAttribute","componentDidMount","get","then","response","today","defaultData","catch","console","log","render","dashboardData","dashboard","dashboardByTitle","loadingMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport TopNav from './components/TopNav';\r\nimport Dashboard from './components/Dashboard';\r\nimport DashboardByTitle from './components/DashboardByTitle';\r\nimport getDefaultData, { getDate, getTrendData, getTitleData } from './common/dataProcessing';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchValue: '',\r\n            titleData : null,\r\n            searchDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\r\n            currentDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\r\n            dropdownTitle: '영화명',\r\n            isLoading: true,\r\n            isSearch: false,\r\n            title: null,\r\n            daily: null,\r\n            cumulative: null,\r\n            theaters: null,\r\n            trend: null,\r\n            rawdata : null,\r\n            isTitle: false,\r\n            error: \"\",\r\n        };\r\n\r\n        this.handleMovienameClick = this.handleMovienameClick.bind(this);\r\n        this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleDropdownSelect(event) {\r\n        const dropdownTitle = (event === \"movieName\") ? \"영화명\" : \"날짜\";\r\n\r\n        this.setState({\r\n            ...this.state, ...{\r\n                dropdownTitle\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSearchChange(event) {\r\n        this.setState({\r\n           ...this.state, ...{ \r\n               searchValue: event.target.value\r\n           }\r\n        });\r\n    }\r\n\r\n    handleDatePickerChange(date) {\r\n        this.setState({\r\n            ...this.state, ...{\r\n                searchDate: date\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isTitle = this.state.dropdownTitle === \"영화명\";\r\n        //getSearchResultData(this.state.searchValue);\r\n        let data = null;\r\n        \r\n        if( isTitle ) {\r\n            data = getTitleData(this.state.rawdata, getDate(this.state.currentDate), this.state.searchValue);\r\n            this.setState({\r\n                ...this.state, ...{\r\n                    titleData: data\r\n                }\r\n            })\r\n\r\n        } else {\r\n            data = getDefaultData(this.state.rawdata, getDate(this.state.searchDate));\r\n            const { title, daily, cumulative, theaters, trend } = data;\r\n        \r\n            this.setState({\r\n                ...this.state, ...{\r\n                    isSearch: true,\r\n                    currentDate: this.state.searchDate,\r\n                    isTitle,\r\n                    title,\r\n                    daily,\r\n                    cumulative,\r\n                    theaters,\r\n                    trend\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleMovienameClick(event) {\r\n        // 1. 데이터 재처리\r\n        debugger;\r\n        let clicked = event.target.getAttribute('data-title'),\r\n            date = this.state.isSearch ? getDate(this.state.searchDate) : getDate(this.state.currentDate),\r\n            trend = getTrendData(this.state.rawdata, clicked, date),\r\n            title = { ...this.state.title, trend: trend.title };\r\n \r\n        //2. 재처리된 데이터 setState로 변경\r\n        this.setState({\r\n            ...this.state, ...{\r\n                isLoading: false,\r\n                trend,\r\n                title\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('../2019.json')\r\n             .then( response => {\r\n                let today = getDate(new Date()),\r\n                    defaultData = getDefaultData(response.data.data, today);\r\n\r\n                const title = defaultData.title,\r\n                      daily = defaultData.daily,\r\n                      cumulative = defaultData.cumulative,\r\n                      theaters  = defaultData.theaters,\r\n                      trend = defaultData.trend,\r\n                      rawdata = defaultData.rawdata;\r\n            \r\n                this.setState({\r\n                    ...this.state, ...{\r\n                        isLoading: false,\r\n                        title,\r\n                        daily,\r\n                        cumulative,\r\n                        theaters,\r\n                        trend,\r\n                        rawdata\r\n                    }\r\n                });\r\n          })\r\n          .catch( error => console.log('error: ', error));\r\n    }\r\n\r\n    render() {\r\n        //const { isLoading, title, daily, cumulative, theaters, trend } = this.state;\r\n        const isTitle = this.state.isTitle,\r\n              dashboardData = { ...this.state },\r\n              dashboard = <Dashboard data={dashboardData} change={this.handleMovienameClick} />,\r\n              dashboardByTitle = <DashboardByTitle data={this.state.titleData} />,\r\n              loadingMessage =  <p className=\"mt-3\">데이터 로드 중입니다...</p>;\r\n\r\n        return (\r\n            <>  \r\n                <Container>\r\n                    <TopNav\r\n                      dropdownTitle={this.state.dropdownTitle}\r\n                      dropdownSelect={this.handleDropdownSelect}\r\n                      searchDate={this.state.searchDate}\r\n                      searchChange={this.handleSearchChange}\r\n                      datePickerChange={this.handleDatePickerChange}\r\n                      submit={this.handleSubmit}\r\n                    />\r\n                    \r\n                    {/* { dashboardData.isLoading ? loadingMessage : dashboard } */}\r\n                    { isTitle ? dashboardByTitle : dashboard }\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}