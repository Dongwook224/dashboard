{"ast":null,"code":"import _objectSpread from \"D:\\\\VisualStudioCode\\\\dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\VisualStudioCode\\\\dashboard\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport template from './components/template';\nimport Selection from './components/Selection';\nimport Dashboard from './components/Dashboard.jsx';\nimport dataProcessing, { fossilFuelData, hydroElectricData, renewableEnergyData, biomassData } from './components/dataProcessing';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = template;\n\n    this.copyDataSeries = (obj = {}) => {\n      this.setState(_objectSpread({}, obj, {\n        charts: [{\n          serie: fossilFuleData,\n          title: \"Fossil Fuel\"\n        }, {\n          serie: hydroElectricData,\n          title: \"Hydroelectric Energy\"\n        }, {\n          serie: renewableEngergyData,\n          title: \"Biomass\"\n        }, {\n          serie: biomassData,\n          title: \"Renewable Energy\"\n        }]\n      }));\n    };\n\n    this.handleSubmit = e => {\n      let msg = dataProcessing(this.state.yearFrom, this.state.yearTo, this.state.msg);\n      this.copyDataSeries();\n    };\n\n    this.handleChangeYear = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    dataProcessing(this.state.yearFrom, this.state.yearTo, this.state.msg);\n    this.copyDataSeries();\n  }\n\n  componentDidUpdate(prepProps, prevState) {\n    if (prevState.yearFrom !== this.state.yearFrom) {\n      this.handleChangeSelect();\n    }\n\n    if (prevState.yearTo !== this.state.yearTo) {\n      this.handleChangeSelect();\n    }\n  }\n\n  handleChangeSelect() {\n    let msg = dataProcessing(this.state.yearFrom, this.state.yearTo);\n    this.copyDataSeries({\n      msg: msg\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Selection, {\n      yearFrom: this.state.yearFrom,\n      yearTo: this.state.yearTo,\n      onChangeYear: this.handleChangeYear,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Dashboard, {\n      userConfig: this.state.userConfig,\n      charts: this.state.charts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/VisualStudioCode/dashboard/src/App.js"],"names":["React","Component","template","Selection","Dashboard","dataProcessing","fossilFuelData","hydroElectricData","renewableEnergyData","biomassData","App","state","copyDataSeries","obj","setState","charts","serie","fossilFuleData","title","renewableEngergyData","handleSubmit","e","msg","yearFrom","yearTo","handleChangeYear","target","name","value","componentDidMount","componentDidUpdate","prepProps","prevState","handleChangeSelect","render","userConfig"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,cAAP,IACIC,cADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,WAJJ,QAKO,6BALP;;AAOA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBU,KADwB,GAChBT,QADgB;;AAAA,SAGxBU,cAHwB,GAGP,CAACC,GAAG,GAAG,EAAP,KAAc;AAC3B,WAAKC,QAAL,mBACOD,GADP;AAGIE,QAAAA,MAAM,EAAE,CACJ;AAAEC,UAAAA,KAAK,EAAEC,cAAT;AAAyBC,UAAAA,KAAK,EAAE;AAAhC,SADI,EAEJ;AAAEF,UAAAA,KAAK,EAAET,iBAAT;AAA4BW,UAAAA,KAAK,EAAE;AAAnC,SAFI,EAGJ;AAAEF,UAAAA,KAAK,EAAEG,oBAAT;AAA+BD,UAAAA,KAAK,EAAE;AAAtC,SAHI,EAIJ;AAAEF,UAAAA,KAAK,EAAEP,WAAT;AAAsBS,UAAAA,KAAK,EAAE;AAA7B,SAJI;AAHZ;AAUH,KAduB;;AAAA,SAqBxBE,YArBwB,GAqBTC,CAAC,IAAI;AAChB,UAAIC,GAAG,GAAGjB,cAAc,CAAC,KAAKM,KAAL,CAAWY,QAAZ,EAAsB,KAAKZ,KAAL,CAAWa,MAAjC,EAAyC,KAAKb,KAAL,CAAWW,GAApD,CAAxB;AACA,WAAKV,cAAL;AACH,KAxBuB;;AAAA,SAyCxBa,gBAzCwB,GAyCLJ,CAAC,IAAI;AACpB,WAAKP,QAAL,CAAc;AACV,SAACO,CAAC,CAACK,MAAF,CAASC,IAAV,GAAiBN,CAAC,CAACK,MAAF,CAASE;AADhB,OAAd;AAGH,KA7CuB;AAAA;;AAgBxBC,EAAAA,iBAAiB,GAAG;AAChBxB,IAAAA,cAAc,CAAC,KAAKM,KAAL,CAAWY,QAAZ,EAAsB,KAAKZ,KAAL,CAAWa,MAAjC,EAAyC,KAAKb,KAAL,CAAWW,GAApD,CAAd;AACA,SAAKV,cAAL;AACH;;AAODkB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAIA,SAAS,CAACT,QAAV,KAAuB,KAAKZ,KAAL,CAAWY,QAAtC,EAAgD;AAC5C,WAAKU,kBAAL;AACH;;AAED,QAAGD,SAAS,CAACR,MAAV,KAAqB,KAAKb,KAAL,CAAWa,MAAnC,EAA2C;AACvC,WAAKS,kBAAL;AACH;AACJ;;AAEDA,EAAAA,kBAAkB,GAAG;AACjB,QAAIX,GAAG,GAAGjB,cAAc,CAAC,KAAKM,KAAL,CAAWY,QAAZ,EAAsB,KAAKZ,KAAL,CAAWa,MAAjC,CAAxB;AACA,SAAKZ,cAAL,CAAoB;AAACU,MAAAA,GAAG,EAAEA;AAAN,KAApB;AACH;;AAQDY,EAAAA,MAAM,GAAG;AACL,WACI,0CACI,oBAAC,SAAD;AACI,MAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWY,QADzB;AAEI,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAFvB;AAGI,MAAA,YAAY,EAAE,KAAKC,gBAHvB;AAII,MAAA,QAAQ,EAAE,KAAKL,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,oBAAC,SAAD;AACI,MAAA,UAAU,EAAE,KAAKT,KAAL,CAAWwB,UAD3B;AAEI,MAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWI,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAcH;;AA9DuB;;AAiE5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport template from './components/template';\r\nimport Selection from './components/Selection';\r\nimport Dashboard from './components/Dashboard.jsx';\r\nimport dataProcessing, {\r\n    fossilFuelData,\r\n    hydroElectricData,\r\n    renewableEnergyData,\r\n    biomassData\r\n} from './components/dataProcessing'\r\n\r\nclass App extends Component {\r\n    state = template;\r\n\r\n    copyDataSeries = (obj = {}) => {\r\n        this.setState({\r\n            ...obj,\r\n\r\n            charts: [\r\n                { serie: fossilFuleData, title: \"Fossil Fuel\" },\r\n                { serie: hydroElectricData, title: \"Hydroelectric Energy\" },\r\n                { serie: renewableEngergyData, title: \"Biomass\" },\r\n                { serie: biomassData, title: \"Renewable Energy\" }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        dataProcessing(this.state.yearFrom, this.state.yearTo, this.state.msg);\r\n        this.copyDataSeries();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        let msg = dataProcessing(this.state.yearFrom, this.state.yearTo, this.state.msg);\r\n        this.copyDataSeries();\r\n    }\r\n\r\n    componentDidUpdate(prepProps, prevState) {\r\n        if (prevState.yearFrom !== this.state.yearFrom) {\r\n            this.handleChangeSelect();\r\n        }\r\n\r\n        if(prevState.yearTo !== this.state.yearTo) {\r\n            this.handleChangeSelect();\r\n        }\r\n    }\r\n\r\n    handleChangeSelect() {\r\n        let msg = dataProcessing(this.state.yearFrom, this.state.yearTo);\r\n        this.copyDataSeries({msg: msg});\r\n    }\r\n\r\n    handleChangeYear = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Selection\r\n                    yearFrom={this.state.yearFrom}\r\n                    yearTo={this.state.yearTo}\r\n                    onChangeYear={this.handleChangeYear}\r\n                    onSubmit={this.handleSubmit}\r\n                />\r\n                <Dashboard\r\n                    userConfig={this.state.userConfig}\r\n                    charts={this.state.charts}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}