{"ast":null,"code":"import _objectSpread from \"D:\\\\VisualStudioCode\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\VisualStudioCode\\\\dashboard\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport TopNav from './components/TopNav';\nimport Dashboard from './components/Dashboard';\nimport getDefaultData, { getDate, getTrendData } from './common/dataProcessing';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchValue: '',\n      searchDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\n      currentDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\n      dropdownTitle: '영화명',\n      isLoading: true,\n      isSearch: false,\n      title: null,\n      daily: null,\n      cumulative: null,\n      theaters: null,\n      trend: null,\n      rawdata: null,\n      error: \"\"\n    };\n    this.handleMovienameClick = this.handleMovienameClick.bind(this);\n    this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleDropdownSelect(event) {\n    const dropdownTitle = event === \"movieName\" ? \"영화명\" : \"날짜\";\n    this.setState(_objectSpread({}, this.state, {}, {\n      dropdownTitle\n    }));\n  }\n\n  handleSearchChange(event) {\n    this.setState(_objectSpread({}, this.state, {}, {\n      searchValue: event.target.value\n    }));\n  }\n\n  handleDatePickerChange(date) {\n    this.setState(_objectSpread({}, this.state, {}, {\n      searchDate: date\n    }));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); //debugger;\n    //getSearchResultData(this.state.searchValue);\n    // 1. 영화명인 경우\n\n    let defaultData = getDefaultData(this.state.rawdata, getDate(this.state.searchDate));\n    const title = defaultData.title,\n          daily = defaultData.daily,\n          cumulative = defaultData.cumulative,\n          theaters = defaultData.theaters,\n          trend = defaultData.trend; // 2. 날짜인 경우\n\n    this.setState(_objectSpread({}, this.state, {}, {\n      isSearch: true,\n      currentDate: this.state.searchDate,\n      title,\n      daily,\n      cumulative,\n      theaters,\n      trend\n    }));\n  }\n\n  handleMovienameClick(event) {\n    // 1. 데이터 재처리\n    debugger;\n\n    let clicked = event.target.getAttribute('data-title'),\n        date = this.state.isSearch ? getDate(this.state.searchDate) : getDate(new Date()),\n        trend = getTrendData(this.state.rawdata, clicked, date),\n        title = _objectSpread({}, this.state.title, {\n      trend: trend.title\n    }); //2. 재처리된 데이터 setState로 변경\n\n\n    this.setState(_objectSpread({}, this.state, {}, {\n      isLoading: false,\n      trend,\n      title\n    }));\n  }\n\n  componentDidMount() {\n    axios.get('../2019.json').then(response => {\n      let today = getDate(new Date()),\n          defaultData = getDefaultData(response.data.data, today);\n      const title = defaultData.title,\n            daily = defaultData.daily,\n            cumulative = defaultData.cumulative,\n            theaters = defaultData.theaters,\n            trend = defaultData.trend,\n            rawdata = defaultData.rawdata;\n      this.setState(_objectSpread({}, this.state, {}, {\n        isLoading: false,\n        title,\n        daily,\n        cumulative,\n        theaters,\n        trend,\n        rawdata\n      }));\n    }).catch(error => console.log('error: ', error));\n  }\n\n  render() {\n    //const { isLoading, title, daily, cumulative, theaters, trend } = this.state;\n    const dashboardData = _objectSpread({}, this.state);\n\n    const dashboard = React.createElement(Dashboard, {\n      data: dashboardData,\n      change: this.handleMovienameClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }),\n          loadingMessage = React.createElement(\"p\", {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"\\uB370\\uC774\\uD130 \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\");\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(TopNav, {\n      dropdownTitle: this.state.dropdownTitle,\n      dropdownSelect: this.handleDropdownSelect,\n      searchDate: this.state.searchDate,\n      searchChange: this.handleSearchChange,\n      datePickerChange: this.handleDatePickerChange,\n      submit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), dashboardData.isLoading ? loadingMessage : dashboard));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/VisualStudioCode/dashboard/src/App.js"],"names":["React","Component","Container","TopNav","Dashboard","getDefaultData","getDate","getTrendData","axios","App","constructor","state","searchValue","searchDate","Date","setFullYear","getFullYear","currentDate","dropdownTitle","isLoading","isSearch","title","daily","cumulative","theaters","trend","rawdata","error","handleMovienameClick","bind","handleDropdownSelect","handleSearchChange","handleDatePickerChange","handleSubmit","event","setState","target","value","date","preventDefault","defaultData","clicked","getAttribute","componentDidMount","get","then","response","today","data","catch","console","log","render","dashboardData","dashboard","loadingMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport TopNav from './components/TopNav';\r\nimport Dashboard from './components/Dashboard';\r\nimport getDefaultData, { getDate, getTrendData } from './common/dataProcessing';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchValue: '',\r\n            searchDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\r\n            currentDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\r\n            dropdownTitle: '영화명',\r\n            isLoading: true,\r\n            isSearch: false,\r\n            title: null,\r\n            daily: null,\r\n            cumulative: null,\r\n            theaters: null,\r\n            trend: null,\r\n            rawdata : null,\r\n            error: \"\",\r\n        };\r\n\r\n        this.handleMovienameClick = this.handleMovienameClick.bind(this);\r\n        this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleDropdownSelect(event) {\r\n        const dropdownTitle = (event === \"movieName\") ? \"영화명\" : \"날짜\";\r\n\r\n        this.setState({\r\n            ...this.state, ...{\r\n                dropdownTitle\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSearchChange(event) {\r\n        this.setState({\r\n           ...this.state, ...{ \r\n               searchValue: event.target.value\r\n           }\r\n        });\r\n    }\r\n\r\n    handleDatePickerChange(date) {\r\n        this.setState({\r\n            ...this.state, ...{\r\n                searchDate: date\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        //debugger;\r\n        //getSearchResultData(this.state.searchValue);\r\n        // 1. 영화명인 경우\r\n       \r\n        let defaultData = getDefaultData(this.state.rawdata, getDate(this.state.searchDate));\r\n        const { title, daily, cumulative, theaters, trend } = defaultData;\r\n        // 2. 날짜인 경우\r\n        this.setState({\r\n            ...this.state, ...{\r\n                isSearch: true,\r\n                currentDate: this.state.searchDate,\r\n                title,\r\n                daily,\r\n                cumulative,\r\n                theaters,\r\n                trend\r\n            }\r\n        });\r\n    }\r\n\r\n    handleMovienameClick(event) {\r\n        // 1. 데이터 재처리\r\n        debugger;\r\n        let clicked = event.target.getAttribute('data-title'),\r\n            date = this.state.isSearch ? getDate(this.state.searchDate) : getDate(new Date()),\r\n            trend = getTrendData(this.state.rawdata, clicked, date),\r\n            title = { ...this.state.title, trend: trend.title };\r\n \r\n        //2. 재처리된 데이터 setState로 변경\r\n        this.setState({\r\n            ...this.state, ...{\r\n                isLoading: false,\r\n                trend,\r\n                title\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('../2019.json')\r\n             .then( response => {\r\n                let today = getDate(new Date()),\r\n                    defaultData = getDefaultData(response.data.data, today);\r\n\r\n                const title = defaultData.title,\r\n                      daily = defaultData.daily,\r\n                      cumulative = defaultData.cumulative,\r\n                      theaters  = defaultData.theaters,\r\n                      trend = defaultData.trend,\r\n                      rawdata = defaultData.rawdata;\r\n            \r\n                this.setState({\r\n                    ...this.state, ...{\r\n                        isLoading: false,\r\n                        title,\r\n                        daily,\r\n                        cumulative,\r\n                        theaters,\r\n                        trend,\r\n                        rawdata\r\n                    }\r\n                });\r\n          })\r\n          .catch( error => console.log('error: ', error));\r\n    }\r\n\r\n    render() {\r\n        //const { isLoading, title, daily, cumulative, theaters, trend } = this.state;\r\n        const dashboardData = { ...this.state };\r\n        const dashboard = <Dashboard data={dashboardData} change={this.handleMovienameClick} />,\r\n              loadingMessage =  <p className=\"mt-3\">데이터 로드 중입니다...</p>;\r\n\r\n        return (\r\n            <>  \r\n                <Container>\r\n                    <TopNav\r\n                      dropdownTitle={this.state.dropdownTitle}\r\n                      dropdownSelect={this.handleDropdownSelect}\r\n                      searchDate={this.state.searchDate}\r\n                      searchChange={this.handleSearchChange}\r\n                      datePickerChange={this.handleDatePickerChange}\r\n                      submit={this.handleSubmit}\r\n                    />\r\n                    { dashboardData.isLoading ? loadingMessage : dashboard }\r\n                    \r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}