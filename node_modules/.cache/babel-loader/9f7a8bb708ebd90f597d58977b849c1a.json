{"ast":null,"code":"const defaultDataProcessing = (data, date) => {\n  let processedData = {\n    dailyAttendence: [],\n    cumulativeAttendence: [],\n    pieChartData: [],\n    lineChartData: []\n  };\n  let movieName = [],\n      dateArray = [];\n  let rawdata = data.data.data,\n      targetData = rawdata.filter(data => data.date === date);\n\n  for (let i = 0; i < 5; i++) {\n    let dailyAttendence = {\n      id: i,\n      movieName: targetData[i].movieNm,\n      value: targetData[i].audiCnt\n    },\n        cumulativeAttendence = {\n      id: i,\n      movieName: targetData[i].movieNm,\n      value: targetData[i].audiAcc\n    },\n        pieChartData = {\n      name: targetData[i].movieNm,\n      y: targetData[i].scrnCnt\n    };\n    processedData['dailyAttendence'].push(dailyAttendence);\n    processedData['cumulativeAttendence'].push(cumulativeAttendence);\n    processedData['pieChartData'].push(pieChartData); //processedData['lineChartData'];\n\n    movieName.push(targetData[i].movieNm);\n  }\n\n  for (let i = -1; i > -8; i--) {\n    let date = getYesterday(i);\n    dateArray.push(date);\n  }\n\n  debugger; //dateArray\n  // series { name: 'movei1', data: [111, 222, 111, 111, 111, 111, 111] }\n  // let lineData = [\n  //         { name: 'movie1', data: [111,222,333,444,555,666,777] },\n  //         { name: 'movie2', data: [111,222,333,444,555,666,777]},\n  //         { name: 'movie3', data: [111,222,333,444,555,666,777]},\n  //         { name: 'movie4', data: [111,222,333,444,555,666,777]},\n  //         { name: 'movie5', data: [111,222,333,444,555,666,777]}\n  // ]  \n  // 전체 데이터에서 날짜를 뽑는다\n\n  let myData = [];\n  dateArray.forEach(targetDate => {\n    let tempDate = rawdata.filter(data => data.date === targetDate);\n    myData.push(tempDate);\n  });\n  debugger;\n  let myData2 = {}; // 각 날짜에서 해당 영화를 뽑는다\n\n  myData.forEach(data => {\n    movieName.forEach(movie => {\n      if (myData.movieNm === movie) {\n        myData2.movi;\n      }\n    });\n  }); // 있으면 데이터 집어넣고 없으면 null로 집어넣는다\n\n  return processedData;\n};\n\nconst getYesterday = i => {\n  let date = new Date();\n  date.setDate(date.getDate() + i);\n  let month = '' + (date.getMonth() + 1),\n      day = '' + date.getDate(),\n      year = date.getFullYear() - 1;\n\n  if (month.length < 2) {\n    month = '0' + month;\n  }\n\n  if (day.length < 2) {\n    day = '0' + day;\n  }\n\n  return [year, month, day].join('');\n};\n\nexport default defaultDataProcessing;\nexport { getYesterday };","map":{"version":3,"sources":["D:/VisualStudioCode/dashboard/src/components/dataProcessing.js"],"names":["defaultDataProcessing","data","date","processedData","dailyAttendence","cumulativeAttendence","pieChartData","lineChartData","movieName","dateArray","rawdata","targetData","filter","i","id","movieNm","value","audiCnt","audiAcc","name","y","scrnCnt","push","getYesterday","myData","forEach","targetDate","tempDate","myData2","movie","movi","Date","setDate","getDate","month","getMonth","day","year","getFullYear","length","join"],"mappings":"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","sourcesContent":["\r\nconst defaultDataProcessing = (data, date) => {\r\n    let processedData = {\r\n        dailyAttendence: [],\r\n        cumulativeAttendence: [],\r\n        pieChartData: [],\r\n        lineChartData: []\r\n    }\r\n    let movieName = [],\r\n        dateArray = [];\r\n\r\n    let rawdata = data.data.data,\r\n        targetData = rawdata.filter( data => data.date === date );\r\n    \r\n    for( let i = 0; i < 5; i++) {\r\n        let dailyAttendence = { id: i, movieName: targetData[i].movieNm, value: targetData[i].audiCnt },\r\n            cumulativeAttendence = { id: i, movieName: targetData[i].movieNm, value: targetData[i].audiAcc },\r\n            pieChartData = { name: targetData[i].movieNm, y: targetData[i].scrnCnt }\r\n        \r\n        processedData['dailyAttendence'].push(dailyAttendence);\r\n        processedData['cumulativeAttendence'].push(cumulativeAttendence);\r\n        processedData['pieChartData'].push(pieChartData);\r\n        //processedData['lineChartData'];\r\n        movieName.push(targetData[i].movieNm);\r\n    }\r\n\r\n    for(let i = -1; i > -8; i--) {\r\n        let date = getYesterday(i);\r\n        dateArray.push(date);\r\n    }\r\n    debugger;\r\n    //dateArray\r\n    \r\n    // series { name: 'movei1', data: [111, 222, 111, 111, 111, 111, 111] }\r\n\r\n    // let lineData = [\r\n    //         { name: 'movie1', data: [111,222,333,444,555,666,777] },\r\n    //         { name: 'movie2', data: [111,222,333,444,555,666,777]},\r\n    //         { name: 'movie3', data: [111,222,333,444,555,666,777]},\r\n    //         { name: 'movie4', data: [111,222,333,444,555,666,777]},\r\n    //         { name: 'movie5', data: [111,222,333,444,555,666,777]}\r\n    // ]  \r\n\r\n    // 전체 데이터에서 날짜를 뽑는다\r\n    let myData = [];\r\n    dateArray.forEach(targetDate => {\r\n        let tempDate = rawdata.filter( data => data.date === targetDate );\r\n        myData.push(tempDate);\r\n    });\r\n    debugger;\r\n\r\n    let myData2 = {};\r\n    // 각 날짜에서 해당 영화를 뽑는다\r\n    myData.forEach( data => {\r\n        movieName.forEach(movie => {\r\n            if(myData.movieNm === movie) {\r\n                myData2.movi\r\n\r\n            }\r\n        })\r\n\r\n\r\n    })\r\n\r\n    // 있으면 데이터 집어넣고 없으면 null로 집어넣는다\r\n\r\n\r\n\r\n    return processedData;\r\n}\r\n\r\nconst getYesterday = (i) => {\r\n    let date = new Date();\r\n    date.setDate(date.getDate() + i);\r\n\r\n    let month = '' + (date.getMonth() + 1),\r\n        day = '' + date.getDate(),\r\n        year = date.getFullYear() - 1;\r\n    \r\n    if (month.length < 2) {\r\n        month = '0' + month;\r\n    }\r\n\r\n    if (day.length < 2) {\r\n        day = '0' + day;\r\n    }\r\n\r\n    return [year, month, day].join('');\r\n}\r\n\r\nexport default defaultDataProcessing;\r\nexport { getYesterday };"]},"metadata":{},"sourceType":"module"}